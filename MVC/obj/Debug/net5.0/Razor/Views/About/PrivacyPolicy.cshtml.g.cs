#pragma checksum "D:\Projects\mvc-provider\MVC\Views\About\PrivacyPolicy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "00a337701a850a4632ce28ffe19c4b0d2034a10e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_About_PrivacyPolicy), @"mvc.1.0.view", @"/Views/About/PrivacyPolicy.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\mvc-provider\MVC\Views\_ViewImports.cshtml"
using MVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\mvc-provider\MVC\Views\_ViewImports.cshtml"
using MVC.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Projects\mvc-provider\MVC\Views\About\_ViewImports.cshtml"
using ApplicationMVC;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"00a337701a850a4632ce28ffe19c4b0d2034a10e", @"/Views/About/PrivacyPolicy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"430e80d7e1b6e2020f17fe2aee5d1a7a635e1295", @"/Views/_ViewImports.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dcacacf933d728414040276b242c527750741403", @"/Views/About/_ViewImports.cshtml")]
    #nullable restore
    public class Views_About_PrivacyPolicy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\Projects\mvc-provider\MVC\Views\About\PrivacyPolicy.cshtml"
  
    ViewData["Title"] = "Контактная информация";
    if (ViewContext.HttpContext.Request.Headers.ContainsKey("ajax") == false) { Layout = "~/Views/Shared/_Layout.cshtml"; }
     















#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <script>


        Controller({})(function DemoBasicCtrl($mdDialog) {
            this.settings = {
                printLayout: true,
                showRuler: true,
                showSpellingSuggestions: true,
                presentationMode: 'edit'
            };

            this.sampleAction = function (name, ev) {
                $mdDialog.show($mdDialog.alert()
                    .title(name)
                    .textContent('You triggered the ""' + name + '"" action')
                    .ok('Great')
                    .targetEvent(ev)
                );
            };
        });

    </script>
    <div ng-controller=""DemoBasicCtrl as ctrl"" ng-cloak>
        <md-toolbar class=""md-menu-toolbar"">
            <div layout=""row"">
                <md-toolbar-filler>
                    <md-icon md-svg-icon=""content-paste""></md-icon>
                </md-toolbar-filler>
                <div>
                    <h2 class=""md-toolbar-tools"">Untitled document</h2>
       ");
            WriteLiteral(@"             <md-menu-bar>


                        <md-menu>
                            <button ng-click=""$mdMenu.open()"">
                                File
                            </button>
                            <md-menu-content>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('share', $event)"">
                                        Share...
                                    </md-button>
                                </md-menu-item>
                                <md-menu-divider></md-menu-divider>
                                <md-menu-item>
                                    <md-menu>
                                        <md-button ng-click=""$mdMenu.open()"">New</md-button>
                                        <md-menu-content>
                                            <md-menu-item><md-button ng-click=""ctrl.sampleAction('New Document', $event)"">Document</md-button></md-menu-item>
 ");
            WriteLiteral(@"                                           <md-menu-item><md-button ng-click=""ctrl.sampleAction('New Spreadsheet', $event)"">Spreadsheet</md-button></md-menu-item>
                                            <md-menu-item><md-button ng-click=""ctrl.sampleAction('New Presentation', $event)"">Presentation</md-button></md-menu-item>
                                            <md-menu-item><md-button ng-click=""ctrl.sampleAction('New Form', $event)"">Form</md-button></md-menu-item>
                                            <md-menu-item><md-button ng-click=""ctrl.sampleAction('New Drawing', $event)"">Drawing</md-button></md-menu-item>
                                        </md-menu-content>
                                    </md-menu>
                                </md-menu-item>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('Open', $event)"">
                                        Open...
                                     ");
            WriteLiteral(@"   <span class=""md-alt-text""> {{ 'M-O' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item>
                                    <md-button disabled=""disabled"" ng-click=""ctrl.sampleAction('Rename', $event)"">
                                        Rename
                                    </md-button>
                                </md-menu-item>
                                <md-menu-divider></md-menu-divider>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('Print', $event)"">
                                        Print
                                        <span class=""md-alt-text"">{{ 'M-P' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                            </md-menu-content>
                        </md-menu>");
            WriteLiteral(@"
                        <md-menu>
                            <button ng-click=""$mdMenu.open()"">
                                Edit
                            </button>
                            <md-menu-content>
                                <md-menu-item class=""md-indent"">
                                    <md-icon md-svg-icon=""undo""></md-icon>
                                    <md-button ng-click=""ctrl.sampleAction('undo', $event)"">
                                        Undo
                                        <span class=""md-alt-text"">{{ 'M-Z' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item class=""md-indent"">
                                    <md-icon md-svg-icon=""redo""></md-icon>
                                    <md-button ng-click=""ctrl.sampleAction('redo', $event)"">
                                        Redo
                               ");
            WriteLiteral(@"         <span class=""md-alt-text"">{{ 'M-Y' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-divider></md-menu-divider>
                                <md-menu-item class=""md-indent"">
                                    <md-icon md-svg-icon=""content-cut""></md-icon>
                                    <md-button ng-click=""ctrl.sampleAction('cut', $event)"">
                                        Cut
                                        <span class=""md-alt-text"">{{ 'M-X' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item class=""md-indent"">
                                    <md-icon md-svg-icon=""content-copy""></md-icon>
                                    <md-button ng-click=""ctrl.sampleAction('copy', $event)"">
                                        Copy
 ");
            WriteLiteral(@"                                       <span class=""md-alt-text"">{{ 'M-C' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item class=""md-indent"">
                                    <md-icon md-svg-icon=""content-paste""></md-icon>
                                    <md-button ng-click=""ctrl.sampleAction('paste', $event)"">
                                        Paste
                                        <span class=""md-alt-text"">{{ 'M-P' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-divider></md-menu-divider>
                                <md-menu-item class=""md-indent"">
                                    <md-button ng-click=""ctrl.sampleAction('Find and replace', $event)"">
                                        Find and replace...
                      ");
            WriteLiteral(@"                  <span class=""md-alt-text"">{{ 'M-S-H' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                            </md-menu-content>
                        </md-menu>
                        <md-menu>
                            <button ng-click=""$mdMenu.open()"">
                                View
                            </button>
                            <md-menu-content>
                                <md-menu-item type=""checkbox"" ng-model=""ctrl.settings.printLayout"">Print layout</md-menu-item>
                                <md-menu-item class=""md-indent"">
                                    <md-menu>
                                        <md-button ng-click=""$mdMenu.open()"">Mode</md-button>
                                        <md-menu-content width=""3"">
                                            <md-menu-item type=""radio"" ng-model=""ctrl.settings.presentationMode"" value=""'present");
            WriteLiteral(@"ation'"">Presentation</md-menu-item>
                                            <md-menu-item type=""radio"" ng-model=""ctrl.settings.presentationMode"" value=""'edit'"">Edit</md-menu-item>
                                            <md-menu-item type=""radio"" ng-model=""ctrl.settings.presentationMode"" value=""'modifiable'"">Modifiable</md-menu-item>
                                        </md-menu-content>
                                    </md-menu>
                                </md-menu-item>
                                <md-menu-divider></md-menu-divider>
                                <md-menu-item type=""checkbox"" ng-model=""ctrl.settings.showRuler"">Show ruler</md-menu-item>
                                <md-menu-item type=""checkbox"" ng-model=""ctrl.settings.showEquationToolbar"">Show equation toolbar</md-menu-item>
                                <md-menu-item type=""checkbox"" ng-model=""ctrl.settings.showSpellingSuggestions"">Show spelling suggestions</md-menu-item>
                             ");
            WriteLiteral(@"   <md-menu-divider></md-menu-divider>
                                <md-menu-item type=""checkbox"" ng-model=""ctrl.settings.compactControls"">Compact controls</md-menu-item>
                                <md-menu-item type=""checkbox"" ng-model=""ctrl.settings.fullScreen"">Full screen</md-menu-item>
                            </md-menu-content>
                        </md-menu>
                        <md-menu>
                            <button ng-click=""$mdMenu.open()"">
                                Format
                            </button>
                            <md-menu-content>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('bold', $event)"">
                                        Bold
                                        <span class=""md-alt-text""> {{ 'M-B' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                    ");
            WriteLiteral(@"            <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('italic', $event)"">
                                        Italic
                                        <span class=""md-alt-text"">{{ 'M-I' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('underline', $event)"">
                                        Underline
                                        <span class=""md-alt-text"">{{ 'M-U' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('strikethrough', $event)"">
                                        Strikethrough
                                        ");
            WriteLiteral(@"<span class=""md-alt-text"">{{ 'A-S-5' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('superscript', $event)"">
                                        Superscript
                                        <span class=""md-alt-text"">{{ 'M-.' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-item>
                                    <md-button ng-click=""ctrl.sampleAction('subscript', $event)"">
                                        Subscript
                                        <span class=""md-alt-text"">{{ 'M-,' | keyboardShortcut }}</span>
                                    </md-button>
                                </md-menu-item>
                                <md-menu-divider><");
            WriteLiteral(@"/md-menu-divider>
                                <md-menu-item><md-button ng-click=""ctrl.toggleSetting('clearFormatting')"">Clear Formatting</md-button></md-menu-item>
                            </md-menu-content>
                        </md-menu>
                    </md-menu-bar>
                </div>
            </div>
        </md-toolbar>

        <md-content class=""page-container"">
            <md-card class=""page"">
                <h1>Untitled document</h1>
                <p>Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras mattis consectetur purus sit amet fermentum. Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit. Integer posuere erat a ante venenatis dapibus posuere velit aliquet.</p>
                <p>Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Vestibulum id li");
            WriteLiteral(@"gula porta felis euismod semper. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Nulla vitae elit libero, a pharetra augue. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>
                <p>Etiam porta sem malesuada magna mollis euismod. Maecenas faucibus mollis interdum. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</p>
            </md-card>
        </md-content>
    </div>
");
            WriteLiteral(@"    <style>
        .card-1 {
            border: 1px solid rgba(0,0,0,0.22);
            box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
            transition: all 0.3s cubic-bezier(.25,.8,.25,1);
        }

            .card-1:hover {
                box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
            }
    </style>
    <div class=""text-center"" style=""padding: 20px;"">

        <div class=""text-center"" style=""padding: 10px;"">
            <h1 class=""display-4"">Правила</h1>

        </div>
        <div class=""card-1"" id=""pane"">
            <div style=""display: flex; flex-direction: row; padding: 10px; "">

                <span class=""material-icons"" style=""justify-self: flex-end; margin-left: auto;"" onclick=""pane.style.height = '100%';""> fullscreen </span>
            </div>
            <p style=""text-indent: 35px; padding: 20px; text-align: justify;"">

                Мы храним информацию и/или получаем доступ к файлам cookie, и обра");
            WriteLiteral(@"батываем персональные данные, к которым относятся уникальные идентификаторы и стандартная информация, отправляемая устройством, для настройки персонализации и анализа рекламы и контента, а также для оценки аудитории наряду с разработкой и совершенствованием продуктов.

                С вашего разрешения мы и наши партнеры можем использовать точные данные геолокации и проводить идентификацию путем сканирования устройства. Вы можете нажать на кнопку согласия, чтобы согласиться на обработку информации нашей компанией и нашими партнерами, как описано выше. Также вы можете получить доступ к более подробной информации и изменить свои пользовательские настройки, прежде чем дать согласие на обработку информации или отказаться от нее. Обратите внимание, что при обработке ваших персональных данных в некоторых случаях ваше согласие может не потребоваться, однако вы имеете право возразить против такой обработки. Ваши настройки будут применяться только к данному веб-сайту. Вы в любое время можете изменить свои настройк");
            WriteLiteral("и, повторно зайдя на этот сайт, или обратиться к нашей политике конфиденциальности.\r\n            </p>\r\n        </div>\r\n    </div>\r\n");
            WriteLiteral("\r\n\r\n\r\nfhgxgfhfg\r\n<ul>\r\n    <li>1</li>\r\n    <li>2</li>\r\n</ul>\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
